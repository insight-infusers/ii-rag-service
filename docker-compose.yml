services:
  main:
    build:
      context: .
      dockerfile: ./services/main/Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      # TODO: implement healthcheck
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "50000:8000"
    networks:
      - rag_network

  embedder:
    build:
      context: .
      dockerfile: ./services/embedder/Dockerfile
    networks:
      - rag_network
    # Internal service, accessible at embedder:8000 within rag_network
    # TODO: implement volume

  retriever:
    build:
      context: .
      dockerfile: ./services/retriever/Dockerfile
    networks:
      - rag_network
    depends_on:
      - embedder
      - vector_db
    # Internal service, accessible at retriever:8000 within rag_network
    # TODO: implement volume

  vector_db:
    build:
      context: .
      dockerfile: ./services/vector_db/Dockerfile
    networks:
      - rag_network
    # Internal service, accessible at vector_db:8000 within rag_network
    # TODO: implement volume

  llm:
    build:
      context: .
      dockerfile: ./services/llm/Dockerfile
    networks:
      - rag_network
    depends_on:
      - retriever
    # Internal service, accessible at llm:8000 within rag_network
    # TODO: implement volume

networks:
  rag_network:
    driver: bridge
